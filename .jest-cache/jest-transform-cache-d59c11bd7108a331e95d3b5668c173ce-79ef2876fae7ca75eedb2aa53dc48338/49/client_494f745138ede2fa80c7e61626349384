92ad42ccfc34bf24b15a195977786723
"use strict";

/**
 * GitHub API Client
 * Wrapper around Octokit to provide a simplified interface
 */
/* istanbul ignore next */
function cov_1evkb1va79() {
  var path = "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts";
  var hash = "b4d80342d600091c2d02e71a2ccc874e176de8c7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "2": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "6": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "7": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "8": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 42
        }
      },
      "9": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "10": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 132
        }
      },
      "11": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "12": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 20
        }
      },
      "13": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "14": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "15": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "16": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 132
        }
      },
      "17": {
        start: {
          line: 60,
          column: 48
        },
        end: {
          line: 60,
          column: 55
        }
      },
      "18": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "19": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 20
        }
      },
      "20": {
        start: {
          line: 72,
          column: 26
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "21": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "22": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "23": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 132
        }
      },
      "24": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 20
        }
      },
      "26": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "27": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 89,
          column: 50
        }
      },
      "28": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "29": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 132
        }
      },
      "30": {
        start: {
          line: 94,
          column: 48
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "31": {
        start: {
          line: 95,
          column: 25
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "32": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "33": {
        start: {
          line: 108,
          column: 26
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "34": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 109,
          column: 50
        }
      },
      "35": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "36": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 132
        }
      },
      "37": {
        start: {
          line: 114,
          column: 48
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "38": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "39": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 20
        }
      },
      "40": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "41": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 130,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 16
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 46
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 49
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 107
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 126
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 28
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 34
          }
        }, {
          start: {
            line: 22,
            column: 38
          },
          end: {
            line: 22,
            column: 42
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 32
          }
        }, {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 23,
            column: 40
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 31
          }
        }, {
          start: {
            line: 39,
            column: 35
          },
          end: {
            line: 39,
            column: 45
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 42
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 35
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 21
          },
          end: {
            line: 53,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 31
          },
          end: {
            line: 53,
            column: 33
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 39
          }
        }, {
          start: {
            line: 54,
            column: 43
          },
          end: {
            line: 54,
            column: 53
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 37
          }
        }, {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 55,
            column: 50
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 35
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 44
          }
        }],
        line: 71
      },
      "13": {
        loc: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 39
          }
        }, {
          start: {
            line: 72,
            column: 43
          },
          end: {
            line: 72,
            column: 53
          }
        }],
        line: 72
      },
      "14": {
        loc: {
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 25
          },
          end: {
            line: 73,
            column: 37
          }
        }, {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 73,
            column: 50
          }
        }],
        line: 73
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 22
          }
        }, {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 74,
            column: 35
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 87,
            column: 35
          },
          end: {
            line: 87,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 87,
            column: 47
          }
        }],
        line: 87
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 88,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 88,
            column: 39
          }
        }, {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 88,
            column: 53
          }
        }],
        line: 88
      },
      "19": {
        loc: {
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 37
          }
        }, {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 50
          }
        }],
        line: 89
      },
      "20": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "21": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 22
          }
        }, {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 90,
            column: 35
          }
        }],
        line: 90
      },
      "22": {
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 107,
            column: 45
          },
          end: {
            line: 107,
            column: 47
          }
        }],
        line: 107
      },
      "23": {
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 39
          }
        }, {
          start: {
            line: 108,
            column: 43
          },
          end: {
            line: 108,
            column: 53
          }
        }],
        line: 108
      },
      "24": {
        loc: {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 37
          }
        }, {
          start: {
            line: 109,
            column: 41
          },
          end: {
            line: 109,
            column: 50
          }
        }],
        line: 109
      },
      "25": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "26": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 22
          }
        }, {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 35
          }
        }],
        line: 110
      },
      "27": {
        loc: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 37
          },
          end: {
            line: 126,
            column: 39
          }
        }],
        line: 126
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0]
    },
    inputSourceMap: {
      file: "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts"],
      sourcesContent: ["/**\n * GitHub API Client\n * Wrapper around Octokit to provide a simplified interface\n */\n\nimport { Octokit } from 'octokit';\nimport { GHPConfig } from '../config';\n\ninterface GitHubClientOptions {\n  /**\n   * GitHub API token\n   */\n  token?: string;\n  \n  /**\n   * Repository owner\n   */\n  owner?: string;\n  \n  /**\n   * Repository name\n   */\n  repo?: string;\n  \n  /**\n   * Base URL for GitHub API (for GitHub Enterprise)\n   */\n  baseUrl?: string;\n}\n\n/**\n * GitHub API client wrapper\n */\nexport class GitHubClient {\n  private octokit: Octokit;\n  private owner: string | null;\n  private repo: string | null;\n  \n  /**\n   * Create a new GitHub client\n   */\n  constructor(options: GitHubClientOptions = {}) {\n    // Initialize Octokit\n    this.octokit = new Octokit({\n      auth: options.token,\n      baseUrl: options.baseUrl,\n    });\n    \n    this.owner = options.owner || null;\n    this.repo = options.repo || null;\n  }\n  \n  /**\n   * Initialize GitHub client from config\n   */\n  static fromConfig(config: GHPConfig): GitHubClient {\n    return new GitHubClient({\n      token: config.github.token,\n      owner: config.github.owner,\n      repo: config.github.repo,\n    });\n  }\n  \n  /**\n   * Get repository information\n   */\n  async getRepository(owner?: string, repo?: string): Promise<any> {\n    const repoOwner = owner || this.owner;\n    const repoName = repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    const { data } = await this.octokit.rest.repos.get({\n      owner: repoOwner,\n      repo: repoName,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * List issues in a repository\n   */\n  async listIssues(options: any = {}): Promise<any[]> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.listForRepo({\n      owner: repoOwner,\n      repo: repoName,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Get a single issue\n   */\n  async getIssue(issueNumber: number, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    const { data } = await this.octokit.rest.issues.get({\n      owner: repoOwner,\n      repo: repoName,\n      issue_number: issueNumber,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Create a new issue\n   */\n  async createIssue(title: string, body?: string, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.create({\n      owner: repoOwner,\n      repo: repoName,\n      title,\n      body,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Update an existing issue\n   */\n  async updateIssue(issueNumber: number, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.update({\n      owner: repoOwner,\n      repo: repoName,\n      issue_number: issueNumber,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Execute a GraphQL query against the GitHub API\n   */\n  async graphql(query: string, variables: any = {}): Promise<any> {\n    return this.octokit.graphql(query, variables);\n  }\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b4d80342d600091c2d02e71a2ccc874e176de8c7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1evkb1va79 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1evkb1va79();
cov_1evkb1va79().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1evkb1va79().s[1]++;
exports.GitHubClient = void 0;
const octokit_1 =
/* istanbul ignore next */
(cov_1evkb1va79().s[2]++, require("octokit"));
/**
 * GitHub API client wrapper
 */
class GitHubClient {
  /**
   * Create a new GitHub client
   */
  constructor(options =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[0]++;
    cov_1evkb1va79().s[3]++;
    // Initialize Octokit
    this.octokit = new octokit_1.Octokit({
      auth: options.token,
      baseUrl: options.baseUrl
    });
    /* istanbul ignore next */
    cov_1evkb1va79().s[4]++;
    this.owner =
    /* istanbul ignore next */
    (cov_1evkb1va79().b[1][0]++, options.owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[1][1]++, null);
    /* istanbul ignore next */
    cov_1evkb1va79().s[5]++;
    this.repo =
    /* istanbul ignore next */
    (cov_1evkb1va79().b[2][0]++, options.repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[2][1]++, null);
  }
  /**
   * Initialize GitHub client from config
   */
  static fromConfig(config) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[1]++;
    cov_1evkb1va79().s[6]++;
    return new GitHubClient({
      token: config.github.token,
      owner: config.github.owner,
      repo: config.github.repo
    });
  }
  /**
   * Get repository information
   */
  async getRepository(owner, repo) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[2]++;
    const repoOwner =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[7]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[3][0]++, owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[3][1]++, this.owner));
    const repoName =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[8]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[4][0]++, repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[4][1]++, this.repo));
    /* istanbul ignore next */
    cov_1evkb1va79().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_1evkb1va79().b[6][0]++, !repoOwner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[6][1]++, !repoName)) {
      /* istanbul ignore next */
      cov_1evkb1va79().b[5][0]++;
      cov_1evkb1va79().s[10]++;
      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');
    } else
    /* istanbul ignore next */
    {
      cov_1evkb1va79().b[5][1]++;
    }
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[11]++, await this.octokit.rest.repos.get({
      owner: repoOwner,
      repo: repoName
    }));
    /* istanbul ignore next */
    cov_1evkb1va79().s[12]++;
    return data;
  }
  /**
   * List issues in a repository
   */
  async listIssues(options =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[3]++;
    const repoOwner =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[13]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[8][0]++, options.owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[8][1]++, this.owner));
    const repoName =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[14]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[9][0]++, options.repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[9][1]++, this.repo));
    /* istanbul ignore next */
    cov_1evkb1va79().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_1evkb1va79().b[11][0]++, !repoOwner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[11][1]++, !repoName)) {
      /* istanbul ignore next */
      cov_1evkb1va79().b[10][0]++;
      cov_1evkb1va79().s[16]++;
      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');
    } else
    /* istanbul ignore next */
    {
      cov_1evkb1va79().b[10][1]++;
    }
    // Remove owner and repo from options and keep the rest
    const {
      owner,
      repo,
      ...restOptions
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[17]++, options);
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[18]++, await this.octokit.rest.issues.listForRepo({
      owner: repoOwner,
      repo: repoName,
      ...restOptions
    }));
    /* istanbul ignore next */
    cov_1evkb1va79().s[19]++;
    return data;
  }
  /**
   * Get a single issue
   */
  async getIssue(issueNumber, options =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[12][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[4]++;
    const repoOwner =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[20]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[13][0]++, options.owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[13][1]++, this.owner));
    const repoName =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[21]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[14][0]++, options.repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[14][1]++, this.repo));
    /* istanbul ignore next */
    cov_1evkb1va79().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_1evkb1va79().b[16][0]++, !repoOwner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[16][1]++, !repoName)) {
      /* istanbul ignore next */
      cov_1evkb1va79().b[15][0]++;
      cov_1evkb1va79().s[23]++;
      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');
    } else
    /* istanbul ignore next */
    {
      cov_1evkb1va79().b[15][1]++;
    }
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[24]++, await this.octokit.rest.issues.get({
      owner: repoOwner,
      repo: repoName,
      issue_number: issueNumber
    }));
    /* istanbul ignore next */
    cov_1evkb1va79().s[25]++;
    return data;
  }
  /**
   * Create a new issue
   */
  async createIssue(title, body, options =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[5]++;
    const repoOwner =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[26]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[18][0]++, options.owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[18][1]++, this.owner));
    const repoName =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[27]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[19][0]++, options.repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[19][1]++, this.repo));
    /* istanbul ignore next */
    cov_1evkb1va79().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1evkb1va79().b[21][0]++, !repoOwner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[21][1]++, !repoName)) {
      /* istanbul ignore next */
      cov_1evkb1va79().b[20][0]++;
      cov_1evkb1va79().s[29]++;
      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');
    } else
    /* istanbul ignore next */
    {
      cov_1evkb1va79().b[20][1]++;
    }
    // Remove owner and repo from options and keep the rest
    const {
      owner,
      repo,
      ...restOptions
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[30]++, options);
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[31]++, await this.octokit.rest.issues.create({
      owner: repoOwner,
      repo: repoName,
      title,
      body,
      ...restOptions
    }));
    /* istanbul ignore next */
    cov_1evkb1va79().s[32]++;
    return data;
  }
  /**
   * Update an existing issue
   */
  async updateIssue(issueNumber, options =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[22][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[6]++;
    const repoOwner =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[33]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[23][0]++, options.owner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[23][1]++, this.owner));
    const repoName =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[34]++,
    /* istanbul ignore next */
    (cov_1evkb1va79().b[24][0]++, options.repo) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[24][1]++, this.repo));
    /* istanbul ignore next */
    cov_1evkb1va79().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_1evkb1va79().b[26][0]++, !repoOwner) ||
    /* istanbul ignore next */
    (cov_1evkb1va79().b[26][1]++, !repoName)) {
      /* istanbul ignore next */
      cov_1evkb1va79().b[25][0]++;
      cov_1evkb1va79().s[36]++;
      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');
    } else
    /* istanbul ignore next */
    {
      cov_1evkb1va79().b[25][1]++;
    }
    // Remove owner and repo from options and keep the rest
    const {
      owner,
      repo,
      ...restOptions
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[37]++, options);
    const {
      data
    } =
    /* istanbul ignore next */
    (cov_1evkb1va79().s[38]++, await this.octokit.rest.issues.update({
      owner: repoOwner,
      repo: repoName,
      issue_number: issueNumber,
      ...restOptions
    }));
    /* istanbul ignore next */
    cov_1evkb1va79().s[39]++;
    return data;
  }
  /**
   * Execute a GraphQL query against the GitHub API
   */
  async graphql(query, variables =
  /* istanbul ignore next */
  (cov_1evkb1va79().b[27][0]++, {})) {
    /* istanbul ignore next */
    cov_1evkb1va79().f[7]++;
    cov_1evkb1va79().s[40]++;
    return this.octokit.graphql(query, variables);
  }
}
/* istanbul ignore next */
cov_1evkb1va79().s[41]++;
exports.GitHubClient = GitHubClient;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,