40bb169bb6ca6c88cd36147d8594ca83
"use strict";

/**
 * Issue commands
 * Commands for working with GitHub issues
 */
/* istanbul ignore next */
function cov_uu6brkvj8() {
  var path = "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/commands/issue.ts";
  var hash = "62e2f7c4642ebc3c2912456ddefa7b95ce0302d5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/commands/issue.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 54
        }
      },
      "2": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "4": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "5": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "6": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 62
        }
      },
      "7": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 62
        }
      },
      "8": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "9": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 65
        }
      },
      "10": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 62,
          column: 98
        }
      },
      "11": {
        start: {
          line: 64,
          column: 19
        },
        end: {
          line: 64,
          column: 56
        }
      },
      "12": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "13": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "14": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 89
        }
      },
      "15": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 62
        }
      },
      "16": {
        start: {
          line: 80,
          column: 19
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "17": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 61
        }
      },
      "18": {
        start: {
          line: 89,
          column: 23
        },
        end: {
          line: 89,
          column: 58
        }
      },
      "19": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "20": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 45
        }
      },
      "21": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "22": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 79
        }
      },
      "23": {
        start: {
          line: 97,
          column: 19
        },
        end: {
          line: 97,
          column: 98
        }
      },
      "24": {
        start: {
          line: 99,
          column: 19
        },
        end: {
          line: 99,
          column: 56
        }
      },
      "25": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "26": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 100
        }
      },
      "27": {
        start: {
          line: 105,
          column: 18
        },
        end: {
          line: 105,
          column: 48
        }
      },
      "28": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 60
        }
      },
      "29": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "30": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "31": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "32": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 67
        }
      },
      "33": {
        start: {
          line: 121,
          column: 19
        },
        end: {
          line: 121,
          column: 98
        }
      },
      "34": {
        start: {
          line: 123,
          column: 19
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "35": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 25
        }
      },
      "36": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "37": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 81
        }
      },
      "38": {
        start: {
          line: 127,
          column: 71
        },
        end: {
          line: 127,
          column: 79
        }
      },
      "39": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "40": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 75
        }
      },
      "41": {
        start: {
          line: 130,
          column: 65
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "42": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "43": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "44": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "45": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 137,
          column: 49
        }
      },
      "46": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 49
        }
      },
      "47": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 139,
          column: 73
        }
      },
      "48": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 73
        }
      },
      "49": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 141,
          column: 67
        }
      },
      "50": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 67
        }
      },
      "51": {
        start: {
          line: 144,
          column: 18
        },
        end: {
          line: 144,
          column: 83
        }
      },
      "52": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 60
        }
      },
      "53": {
        start: {
          line: 153,
          column: 23
        },
        end: {
          line: 153,
          column: 58
        }
      },
      "54": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 65
        }
      },
      "55": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 45
        }
      },
      "56": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "57": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 79
        }
      },
      "58": {
        start: {
          line: 161,
          column: 19
        },
        end: {
          line: 161,
          column: 98
        }
      },
      "59": {
        start: {
          line: 163,
          column: 19
        },
        end: {
          line: 163,
          column: 56
        }
      },
      "60": {
        start: {
          line: 165,
          column: 23
        },
        end: {
          line: 165,
          column: 25
        }
      },
      "61": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 167,
          column: 41
        }
      },
      "62": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 41
        }
      },
      "63": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 169,
          column: 39
        }
      },
      "64": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 39
        }
      },
      "65": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "66": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "67": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "68": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 81
        }
      },
      "69": {
        start: {
          line: 173,
          column: 71
        },
        end: {
          line: 173,
          column: 79
        }
      },
      "70": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "71": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 75
        }
      },
      "72": {
        start: {
          line: 176,
          column: 65
        },
        end: {
          line: 176,
          column: 73
        }
      },
      "73": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "74": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 98
        }
      },
      "75": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "76": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 44
        }
      },
      "77": {
        start: {
          line: 186,
          column: 18
        },
        end: {
          line: 186,
          column: 63
        }
      },
      "78": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "registerIssueCommands",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 30
          }
        },
        loc: {
          start: {
            line: 12,
            column: 40
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "listIssues",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 25
          }
        },
        loc: {
          start: {
            line: 57,
            column: 35
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 57
      },
      "2": {
        name: "getIssue",
        decl: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 23
          }
        },
        loc: {
          start: {
            line: 87,
            column: 46
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 87
      },
      "3": {
        name: "createIssue",
        decl: {
          start: {
            line: 112,
            column: 15
          },
          end: {
            line: 112,
            column: 26
          }
        },
        loc: {
          start: {
            line: 112,
            column: 36
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 112
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 127,
            column: 64
          },
          end: {
            line: 127,
            column: 65
          }
        },
        loc: {
          start: {
            line: 127,
            column: 71
          },
          end: {
            line: 127,
            column: 79
          }
        },
        line: 127
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 130,
            column: 58
          },
          end: {
            line: 130,
            column: 59
          }
        },
        loc: {
          start: {
            line: 130,
            column: 65
          },
          end: {
            line: 130,
            column: 73
          }
        },
        line: 130
      },
      "6": {
        name: "updateIssue",
        decl: {
          start: {
            line: 151,
            column: 15
          },
          end: {
            line: 151,
            column: 26
          }
        },
        loc: {
          start: {
            line: 151,
            column: 49
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 151
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 173,
            column: 64
          },
          end: {
            line: 173,
            column: 65
          }
        },
        loc: {
          start: {
            line: 173,
            column: 71
          },
          end: {
            line: 173,
            column: 79
          }
        },
        line: 173
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 176,
            column: 58
          },
          end: {
            line: 176,
            column: 59
          }
        },
        loc: {
          start: {
            line: 176,
            column: 65
          },
          end: {
            line: 176,
            column: 73
          }
        },
        line: 176
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 181,
            column: 43
          },
          end: {
            line: 181,
            column: 44
          }
        },
        loc: {
          start: {
            line: 181,
            column: 61
          },
          end: {
            line: 183,
            column: 9
          }
        },
        line: 181
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 56
          }
        }, {
          start: {
            line: 60,
            column: 60
          },
          end: {
            line: 60,
            column: 65
          }
        }],
        line: 60
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 28
          }
        }, {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 67,
            column: 60
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 18
          },
          end: {
            line: 68,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 18
          },
          end: {
            line: 68,
            column: 45
          }
        }, {
          start: {
            line: 68,
            column: 49
          },
          end: {
            line: 68,
            column: 51
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 56
          }
        }, {
          start: {
            line: 90,
            column: 60
          },
          end: {
            line: 90,
            column: 65
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 115,
            column: 56
          }
        }, {
          start: {
            line: 115,
            column: 60
          },
          end: {
            line: 115,
            column: 65
          }
        }],
        line: 115
      },
      "8": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 128,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "11": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "12": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 137,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 137,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "13": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 139,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 141,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 56
          }
        }, {
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 154,
            column: 65
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 167,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 167,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "18": {
        loc: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 169,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 169,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "19": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 171,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 171,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "20": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "21": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "22": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 184,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/commands/issue.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/commands/issue.ts"],
      sourcesContent: ["/**\n * Issue commands\n * Commands for working with GitHub issues\n */\n\nimport { Command } from 'commander';\nimport { \n  GitHubClient, \n  loadConfig, \n  formatOutput, \n  wrapWithErrorHandler, \n  ValidationError,\n  FormatType,\n  cmdArgsToConfig\n} from '../lib';\n\n/**\n * Register issue commands with the CLI\n */\nexport function registerIssueCommands(program: Command): void {\n  const issueCommand = program\n    .command('issue')\n    .description('Manage GitHub issues');\n\n  // List issues\n  issueCommand\n    .command('list')\n    .description('List issues in a repository')\n    .option('-s, --state <state>', 'Issue state (open, closed, all)', 'open')\n    .option('-l, --limit <limit>', 'Maximum number of issues to return', '10')\n    .option('-a, --assignee <assignee>', 'Filter by assignee')\n    .option('-L, --label <labels>', 'Filter by label, comma-separated')\n    .option('-S, --sort <sort>', 'Sort issues by (created, updated, comments)', 'created')\n    .option('-d, --direction <direction>', 'Sort direction (asc, desc)', 'desc')\n    .action(wrapWithErrorHandler(listIssues));\n\n  // Get issue\n  issueCommand\n    .command('get')\n    .description('Get details of a specific issue')\n    .argument('<issue-number>', 'Issue number')\n    .action(wrapWithErrorHandler(getIssue));\n\n  // Create issue\n  issueCommand\n    .command('create')\n    .description('Create a new issue')\n    .requiredOption('-t, --title <title>', 'Issue title')\n    .option('-b, --body <body>', 'Issue body')\n    .option('-a, --assignees <assignees>', 'Comma-separated list of assignees')\n    .option('-L, --labels <labels>', 'Comma-separated list of labels')\n    .action(wrapWithErrorHandler(createIssue));\n\n  // Update issue\n  issueCommand\n    .command('update')\n    .description('Update an existing issue')\n    .argument('<issue-number>', 'Issue number')\n    .option('-t, --title <title>', 'New issue title')\n    .option('-b, --body <body>', 'New issue body')\n    .option('-s, --state <state>', 'Issue state (open, closed)')\n    .option('-a, --assignees <assignees>', 'Comma-separated list of assignees')\n    .option('-L, --labels <labels>', 'Comma-separated list of labels')\n    .action(wrapWithErrorHandler(updateIssue));\n}\n\n/**\n * List issues in a repository\n */\nasync function listIssues(options: any): Promise<void> {\n  // Parse command line options\n  const formatType = options.parent.parent.opts().format as FormatType;\n  const verbose = options.parent.parent.opts().verbose || false;\n  \n  // Load config and merge with command line options\n  const config = loadConfig(cmdArgsToConfig(options.parent.parent.opts()));\n  \n  // Create GitHub client\n  const client = GitHubClient.fromConfig(config);\n  \n  // Prepare API options\n  const apiOptions = {\n    state: options.state || config.defaults.issues.state,\n    per_page: parseInt(options.limit, 10) || 10,\n    assignee: options.assignee,\n    labels: options.label,\n    sort: options.sort,\n    direction: options.direction,\n  };\n  \n  // Optional extra information in verbose mode\n  if (verbose) {\n    console.log(`Fetching issues from ${config.github.owner}/${config.github.repo}`);\n    console.log(`Options: ${JSON.stringify(apiOptions)}`);\n  }\n  \n  // Fetch issues\n  const issues = await client.listIssues(apiOptions);\n  \n  // Print results\n  console.log(formatOutput(issues, formatType));\n}\n\n/**\n * Get details of a specific issue\n */\nasync function getIssue(issueNumber: string, options: any): Promise<void> {\n  // Parse command line options\n  const formatType = options.parent.parent.opts().format as FormatType;\n  const verbose = options.parent.parent.opts().verbose || false;\n  \n  // Validate issue number\n  const issueId = parseInt(issueNumber, 10);\n  if (isNaN(issueId)) {\n    throw new ValidationError('Issue number must be a valid number');\n  }\n  \n  // Load config and merge with command line options\n  const config = loadConfig(cmdArgsToConfig(options.parent.parent.opts()));\n  \n  // Create GitHub client\n  const client = GitHubClient.fromConfig(config);\n  \n  // Optional extra information in verbose mode\n  if (verbose) {\n    console.log(`Fetching issue #${issueId} from ${config.github.owner}/${config.github.repo}`);\n  }\n  \n  // Fetch issue\n  const issue = await client.getIssue(issueId);\n  \n  // Print results\n  console.log(formatOutput(issue, formatType));\n}\n\n/**\n * Create a new issue\n */\nasync function createIssue(options: any): Promise<void> {\n  // Parse command line options\n  const formatType = options.parent.parent.opts().format as FormatType;\n  const verbose = options.parent.parent.opts().verbose || false;\n  \n  // Validate required fields\n  if (!options.title) {\n    throw new ValidationError('Issue title is required');\n  }\n  \n  // Load config and merge with command line options\n  const config = loadConfig(cmdArgsToConfig(options.parent.parent.opts()));\n  \n  // Create GitHub client\n  const client = GitHubClient.fromConfig(config);\n  \n  // Prepare API options\n  const apiOptions: Record<string, any> = {};\n  \n  if (options.assignees) {\n    apiOptions.assignees = options.assignees.split(',').map((a: string) => a.trim());\n  }\n  \n  if (options.labels) {\n    apiOptions.labels = options.labels.split(',').map((l: string) => l.trim());\n  }\n  \n  // Optional extra information in verbose mode\n  if (verbose) {\n    console.log(`Creating issue in ${config.github.owner}/${config.github.repo}`);\n    console.log(`Title: ${options.title}`);\n    if (options.body) console.log(`Body: ${options.body}`);\n    if (apiOptions.assignees) console.log(`Assignees: ${apiOptions.assignees.join(', ')}`);\n    if (apiOptions.labels) console.log(`Labels: ${apiOptions.labels.join(', ')}`);\n  }\n  \n  // Create issue\n  const issue = await client.createIssue(options.title, options.body, apiOptions);\n  \n  // Print results\n  console.log(formatOutput(issue, formatType));\n}\n\n/**\n * Update an existing issue\n */\nasync function updateIssue(issueNumber: string, options: any): Promise<void> {\n  // Parse command line options\n  const formatType = options.parent.parent.opts().format as FormatType;\n  const verbose = options.parent.parent.opts().verbose || false;\n  \n  // Validate issue number\n  const issueId = parseInt(issueNumber, 10);\n  if (isNaN(issueId)) {\n    throw new ValidationError('Issue number must be a valid number');\n  }\n  \n  // Load config and merge with command line options\n  const config = loadConfig(cmdArgsToConfig(options.parent.parent.opts()));\n  \n  // Create GitHub client\n  const client = GitHubClient.fromConfig(config);\n  \n  // Prepare API options\n  const apiOptions: Record<string, any> = {};\n  \n  if (options.title) apiOptions.title = options.title;\n  if (options.body) apiOptions.body = options.body;\n  if (options.state) apiOptions.state = options.state;\n  \n  if (options.assignees) {\n    apiOptions.assignees = options.assignees.split(',').map((a: string) => a.trim());\n  }\n  \n  if (options.labels) {\n    apiOptions.labels = options.labels.split(',').map((l: string) => l.trim());\n  }\n  \n  // Optional extra information in verbose mode\n  if (verbose) {\n    console.log(`Updating issue #${issueId} in ${config.github.owner}/${config.github.repo}`);\n    Object.entries(apiOptions).forEach(([key, value]) => {\n      console.log(`${key}: ${value}`);\n    });\n  }\n  \n  // Update issue\n  const issue = await client.updateIssue(issueId, apiOptions);\n  \n  // Print results\n  console.log(formatOutput(issue, formatType));\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62e2f7c4642ebc3c2912456ddefa7b95ce0302d5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uu6brkvj8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uu6brkvj8();
cov_uu6brkvj8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uu6brkvj8().s[1]++;
exports.registerIssueCommands = registerIssueCommands;
const lib_1 =
/* istanbul ignore next */
(cov_uu6brkvj8().s[2]++, require("../lib"));
/**
 * Register issue commands with the CLI
 */
function registerIssueCommands(program) {
  /* istanbul ignore next */
  cov_uu6brkvj8().f[0]++;
  const issueCommand =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[3]++, program.command('issue').description('Manage GitHub issues'));
  // List issues
  /* istanbul ignore next */
  cov_uu6brkvj8().s[4]++;
  issueCommand.command('list').description('List issues in a repository').option('-s, --state <state>', 'Issue state (open, closed, all)', 'open').option('-l, --limit <limit>', 'Maximum number of issues to return', '10').option('-a, --assignee <assignee>', 'Filter by assignee').option('-L, --label <labels>', 'Filter by label, comma-separated').option('-S, --sort <sort>', 'Sort issues by (created, updated, comments)', 'created').option('-d, --direction <direction>', 'Sort direction (asc, desc)', 'desc').action((0, lib_1.wrapWithErrorHandler)(listIssues));
  // Get issue
  /* istanbul ignore next */
  cov_uu6brkvj8().s[5]++;
  issueCommand.command('get').description('Get details of a specific issue').argument('<issue-number>', 'Issue number').action((0, lib_1.wrapWithErrorHandler)(getIssue));
  // Create issue
  /* istanbul ignore next */
  cov_uu6brkvj8().s[6]++;
  issueCommand.command('create').description('Create a new issue').requiredOption('-t, --title <title>', 'Issue title').option('-b, --body <body>', 'Issue body').option('-a, --assignees <assignees>', 'Comma-separated list of assignees').option('-L, --labels <labels>', 'Comma-separated list of labels').action((0, lib_1.wrapWithErrorHandler)(createIssue));
  // Update issue
  /* istanbul ignore next */
  cov_uu6brkvj8().s[7]++;
  issueCommand.command('update').description('Update an existing issue').argument('<issue-number>', 'Issue number').option('-t, --title <title>', 'New issue title').option('-b, --body <body>', 'New issue body').option('-s, --state <state>', 'Issue state (open, closed)').option('-a, --assignees <assignees>', 'Comma-separated list of assignees').option('-L, --labels <labels>', 'Comma-separated list of labels').action((0, lib_1.wrapWithErrorHandler)(updateIssue));
}
/**
 * List issues in a repository
 */
async function listIssues(options) {
  /* istanbul ignore next */
  cov_uu6brkvj8().f[1]++;
  // Parse command line options
  const formatType =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[8]++, options.parent.parent.opts().format);
  const verbose =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[9]++,
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[0][0]++, options.parent.parent.opts().verbose) ||
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[0][1]++, false));
  // Load config and merge with command line options
  const config =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[10]++, (0, lib_1.loadConfig)((0, lib_1.cmdArgsToConfig)(options.parent.parent.opts())));
  // Create GitHub client
  const client =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[11]++, lib_1.GitHubClient.fromConfig(config));
  // Prepare API options
  const apiOptions =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[12]++, {
    state:
    /* istanbul ignore next */
    (cov_uu6brkvj8().b[1][0]++, options.state) ||
    /* istanbul ignore next */
    (cov_uu6brkvj8().b[1][1]++, config.defaults.issues.state),
    per_page:
    /* istanbul ignore next */
    (cov_uu6brkvj8().b[2][0]++, parseInt(options.limit, 10)) ||
    /* istanbul ignore next */
    (cov_uu6brkvj8().b[2][1]++, 10),
    assignee: options.assignee,
    labels: options.label,
    sort: options.sort,
    direction: options.direction
  });
  // Optional extra information in verbose mode
  /* istanbul ignore next */
  cov_uu6brkvj8().s[13]++;
  if (verbose) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[3][0]++;
    cov_uu6brkvj8().s[14]++;
    console.log(`Fetching issues from ${config.github.owner}/${config.github.repo}`);
    /* istanbul ignore next */
    cov_uu6brkvj8().s[15]++;
    console.log(`Options: ${JSON.stringify(apiOptions)}`);
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[3][1]++;
  }
  // Fetch issues
  const issues =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[16]++, await client.listIssues(apiOptions));
  // Print results
  /* istanbul ignore next */
  cov_uu6brkvj8().s[17]++;
  console.log((0, lib_1.formatOutput)(issues, formatType));
}
/**
 * Get details of a specific issue
 */
async function getIssue(issueNumber, options) {
  /* istanbul ignore next */
  cov_uu6brkvj8().f[2]++;
  // Parse command line options
  const formatType =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[18]++, options.parent.parent.opts().format);
  const verbose =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[19]++,
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[4][0]++, options.parent.parent.opts().verbose) ||
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[4][1]++, false));
  // Validate issue number
  const issueId =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[20]++, parseInt(issueNumber, 10));
  /* istanbul ignore next */
  cov_uu6brkvj8().s[21]++;
  if (isNaN(issueId)) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[5][0]++;
    cov_uu6brkvj8().s[22]++;
    throw new lib_1.ValidationError('Issue number must be a valid number');
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[5][1]++;
  }
  // Load config and merge with command line options
  const config =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[23]++, (0, lib_1.loadConfig)((0, lib_1.cmdArgsToConfig)(options.parent.parent.opts())));
  // Create GitHub client
  const client =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[24]++, lib_1.GitHubClient.fromConfig(config));
  // Optional extra information in verbose mode
  /* istanbul ignore next */
  cov_uu6brkvj8().s[25]++;
  if (verbose) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[6][0]++;
    cov_uu6brkvj8().s[26]++;
    console.log(`Fetching issue #${issueId} from ${config.github.owner}/${config.github.repo}`);
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[6][1]++;
  }
  // Fetch issue
  const issue =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[27]++, await client.getIssue(issueId));
  // Print results
  /* istanbul ignore next */
  cov_uu6brkvj8().s[28]++;
  console.log((0, lib_1.formatOutput)(issue, formatType));
}
/**
 * Create a new issue
 */
async function createIssue(options) {
  /* istanbul ignore next */
  cov_uu6brkvj8().f[3]++;
  // Parse command line options
  const formatType =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[29]++, options.parent.parent.opts().format);
  const verbose =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[30]++,
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[7][0]++, options.parent.parent.opts().verbose) ||
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[7][1]++, false));
  // Validate required fields
  /* istanbul ignore next */
  cov_uu6brkvj8().s[31]++;
  if (!options.title) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[8][0]++;
    cov_uu6brkvj8().s[32]++;
    throw new lib_1.ValidationError('Issue title is required');
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[8][1]++;
  }
  // Load config and merge with command line options
  const config =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[33]++, (0, lib_1.loadConfig)((0, lib_1.cmdArgsToConfig)(options.parent.parent.opts())));
  // Create GitHub client
  const client =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[34]++, lib_1.GitHubClient.fromConfig(config));
  // Prepare API options
  const apiOptions =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[35]++, {});
  /* istanbul ignore next */
  cov_uu6brkvj8().s[36]++;
  if (options.assignees) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[9][0]++;
    cov_uu6brkvj8().s[37]++;
    apiOptions.assignees = options.assignees.split(',').map(a => {
      /* istanbul ignore next */
      cov_uu6brkvj8().f[4]++;
      cov_uu6brkvj8().s[38]++;
      return a.trim();
    });
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[9][1]++;
  }
  cov_uu6brkvj8().s[39]++;
  if (options.labels) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[10][0]++;
    cov_uu6brkvj8().s[40]++;
    apiOptions.labels = options.labels.split(',').map(l => {
      /* istanbul ignore next */
      cov_uu6brkvj8().f[5]++;
      cov_uu6brkvj8().s[41]++;
      return l.trim();
    });
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[10][1]++;
  }
  // Optional extra information in verbose mode
  cov_uu6brkvj8().s[42]++;
  if (verbose) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[11][0]++;
    cov_uu6brkvj8().s[43]++;
    console.log(`Creating issue in ${config.github.owner}/${config.github.repo}`);
    /* istanbul ignore next */
    cov_uu6brkvj8().s[44]++;
    console.log(`Title: ${options.title}`);
    /* istanbul ignore next */
    cov_uu6brkvj8().s[45]++;
    if (options.body) {
      /* istanbul ignore next */
      cov_uu6brkvj8().b[12][0]++;
      cov_uu6brkvj8().s[46]++;
      console.log(`Body: ${options.body}`);
    } else
    /* istanbul ignore next */
    {
      cov_uu6brkvj8().b[12][1]++;
    }
    cov_uu6brkvj8().s[47]++;
    if (apiOptions.assignees) {
      /* istanbul ignore next */
      cov_uu6brkvj8().b[13][0]++;
      cov_uu6brkvj8().s[48]++;
      console.log(`Assignees: ${apiOptions.assignees.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_uu6brkvj8().b[13][1]++;
    }
    cov_uu6brkvj8().s[49]++;
    if (apiOptions.labels) {
      /* istanbul ignore next */
      cov_uu6brkvj8().b[14][0]++;
      cov_uu6brkvj8().s[50]++;
      console.log(`Labels: ${apiOptions.labels.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_uu6brkvj8().b[14][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[11][1]++;
  }
  // Create issue
  const issue =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[51]++, await client.createIssue(options.title, options.body, apiOptions));
  // Print results
  /* istanbul ignore next */
  cov_uu6brkvj8().s[52]++;
  console.log((0, lib_1.formatOutput)(issue, formatType));
}
/**
 * Update an existing issue
 */
async function updateIssue(issueNumber, options) {
  /* istanbul ignore next */
  cov_uu6brkvj8().f[6]++;
  // Parse command line options
  const formatType =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[53]++, options.parent.parent.opts().format);
  const verbose =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[54]++,
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[15][0]++, options.parent.parent.opts().verbose) ||
  /* istanbul ignore next */
  (cov_uu6brkvj8().b[15][1]++, false));
  // Validate issue number
  const issueId =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[55]++, parseInt(issueNumber, 10));
  /* istanbul ignore next */
  cov_uu6brkvj8().s[56]++;
  if (isNaN(issueId)) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[16][0]++;
    cov_uu6brkvj8().s[57]++;
    throw new lib_1.ValidationError('Issue number must be a valid number');
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[16][1]++;
  }
  // Load config and merge with command line options
  const config =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[58]++, (0, lib_1.loadConfig)((0, lib_1.cmdArgsToConfig)(options.parent.parent.opts())));
  // Create GitHub client
  const client =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[59]++, lib_1.GitHubClient.fromConfig(config));
  // Prepare API options
  const apiOptions =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[60]++, {});
  /* istanbul ignore next */
  cov_uu6brkvj8().s[61]++;
  if (options.title) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[17][0]++;
    cov_uu6brkvj8().s[62]++;
    apiOptions.title = options.title;
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[17][1]++;
  }
  cov_uu6brkvj8().s[63]++;
  if (options.body) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[18][0]++;
    cov_uu6brkvj8().s[64]++;
    apiOptions.body = options.body;
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[18][1]++;
  }
  cov_uu6brkvj8().s[65]++;
  if (options.state) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[19][0]++;
    cov_uu6brkvj8().s[66]++;
    apiOptions.state = options.state;
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[19][1]++;
  }
  cov_uu6brkvj8().s[67]++;
  if (options.assignees) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[20][0]++;
    cov_uu6brkvj8().s[68]++;
    apiOptions.assignees = options.assignees.split(',').map(a => {
      /* istanbul ignore next */
      cov_uu6brkvj8().f[7]++;
      cov_uu6brkvj8().s[69]++;
      return a.trim();
    });
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[20][1]++;
  }
  cov_uu6brkvj8().s[70]++;
  if (options.labels) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[21][0]++;
    cov_uu6brkvj8().s[71]++;
    apiOptions.labels = options.labels.split(',').map(l => {
      /* istanbul ignore next */
      cov_uu6brkvj8().f[8]++;
      cov_uu6brkvj8().s[72]++;
      return l.trim();
    });
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[21][1]++;
  }
  // Optional extra information in verbose mode
  cov_uu6brkvj8().s[73]++;
  if (verbose) {
    /* istanbul ignore next */
    cov_uu6brkvj8().b[22][0]++;
    cov_uu6brkvj8().s[74]++;
    console.log(`Updating issue #${issueId} in ${config.github.owner}/${config.github.repo}`);
    /* istanbul ignore next */
    cov_uu6brkvj8().s[75]++;
    Object.entries(apiOptions).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_uu6brkvj8().f[9]++;
      cov_uu6brkvj8().s[76]++;
      console.log(`${key}: ${value}`);
    });
  } else
  /* istanbul ignore next */
  {
    cov_uu6brkvj8().b[22][1]++;
  }
  // Update issue
  const issue =
  /* istanbul ignore next */
  (cov_uu6brkvj8().s[77]++, await client.updateIssue(issueId, apiOptions));
  // Print results
  /* istanbul ignore next */
  cov_uu6brkvj8().s[78]++;
  console.log((0, lib_1.formatOutput)(issue, formatType));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,