{"file":"/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/test-helpers/mock-github.ts","mappings":";AAAA;;;GAGG;;AASH,0CAsBC;AAQD,kDAIC;AAzCD;;;;;;GAMG;AACH,SAAgB,eAAe,CAAC,EAAU,EAAE,KAAa,EAAE,UAAqC,EAAE;IAChG,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IAErC,OAAO;QACL,EAAE;QACF,MAAM,EAAE,EAAE;QACV,KAAK;QACL,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,iBAAiB;QACvC,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,MAAM;QAC9B,QAAQ,EAAE,kDAAkD,EAAE,EAAE;QAChE,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE;QAC5B,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,EAAE;QAClC,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,GAAG;QACrC,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,GAAG;QACrC,SAAS,EAAE,OAAO,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;QACzE,IAAI,EAAE;YACJ,KAAK,EAAE,OAAO,CAAC,OAAO,IAAI,WAAW;YACrC,EAAE,EAAE,CAAC;YACL,UAAU,EAAE,kCAAkC;YAC9C,QAAQ,EAAE,8BAA8B;SACzC;KACF,CAAC;AACJ,CAAC;AAED;;;;;GAKG;AACH,SAAgB,mBAAmB,CAAC,KAAa,EAAE,UAAqC,EAAE;IACxF,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAC5C,eAAe,CAAC,CAAC,GAAG,CAAC,EAAE,cAAc,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CACvD,CAAC;AACJ,CAAC","names":[],"sources":["/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/test-helpers/mock-github.ts"],"sourcesContent":["/**\n * Mock GitHub API\n * Provides mock implementation of GitHub API responses for testing\n */\n\n/**\n * Create a mock GitHub issue\n * @param id Issue ID\n * @param title Issue title\n * @param options Additional options\n * @returns A mock GitHub issue object\n */\nexport function createMockIssue(id: number, title: string, options: Partial<MockIssueOptions> = {}) {\n  const now = new Date().toISOString();\n  \n  return {\n    id,\n    number: id,\n    title,\n    body: options.body || 'Test issue body',\n    state: options.state || 'open',\n    html_url: `https://github.com/test-owner/test-repo/issues/${id}`,\n    labels: options.labels || [],\n    assignees: options.assignees || [],\n    created_at: options.created_at || now,\n    updated_at: options.updated_at || now,\n    closed_at: options.state === 'closed' ? (options.closed_at || now) : null,\n    user: {\n      login: options.creator || 'test-user',\n      id: 1,\n      avatar_url: 'https://github.com/test-user.png',\n      html_url: 'https://github.com/test-user'\n    }\n  };\n}\n\n/**\n * Create a list of mock issues\n * @param count Number of issues to create\n * @param options Additional options\n * @returns An array of mock GitHub issues\n */\nexport function createMockIssueList(count: number, options: Partial<MockIssueOptions> = {}) {\n  return Array.from({ length: count }, (_, i) => \n    createMockIssue(i + 1, `Test issue ${i + 1}`, options)\n  );\n}\n\n/**\n * Options for creating mock issues\n */\nexport interface MockIssueOptions {\n  body: string;\n  state: 'open' | 'closed';\n  labels: Array<{ id: number, name: string, color: string }>;\n  assignees: Array<{ login: string, id: number }>;\n  created_at: string;\n  updated_at: string;\n  closed_at: string | null;\n  creator: string;\n} "],"version":3}