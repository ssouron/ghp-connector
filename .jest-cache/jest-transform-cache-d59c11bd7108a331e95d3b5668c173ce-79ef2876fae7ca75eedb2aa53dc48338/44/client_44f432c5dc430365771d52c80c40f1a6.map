{"file":"/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts","mappings":"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","names":[],"sources":["/Users/stephanesouron/dev/beddy-bye-stories/ghp-connector/src/lib/github/client.ts"],"sourcesContent":["/**\n * GitHub API Client\n * Wrapper around Octokit to provide a simplified interface\n */\n\nimport { Octokit } from 'octokit';\nimport { GHPConfig } from '../config';\n\ninterface GitHubClientOptions {\n  /**\n   * GitHub API token\n   */\n  token?: string;\n  \n  /**\n   * Repository owner\n   */\n  owner?: string;\n  \n  /**\n   * Repository name\n   */\n  repo?: string;\n  \n  /**\n   * Base URL for GitHub API (for GitHub Enterprise)\n   */\n  baseUrl?: string;\n}\n\n/**\n * GitHub API client wrapper\n */\nexport class GitHubClient {\n  private octokit: Octokit;\n  private owner: string | null;\n  private repo: string | null;\n  \n  /**\n   * Create a new GitHub client\n   */\n  constructor(options: GitHubClientOptions = {}) {\n    // Initialize Octokit\n    this.octokit = new Octokit({\n      auth: options.token,\n      baseUrl: options.baseUrl,\n    });\n    \n    this.owner = options.owner || null;\n    this.repo = options.repo || null;\n  }\n  \n  /**\n   * Initialize GitHub client from config\n   */\n  static fromConfig(config: GHPConfig): GitHubClient {\n    return new GitHubClient({\n      token: config.github.token,\n      owner: config.github.owner,\n      repo: config.github.repo,\n    });\n  }\n  \n  /**\n   * Get repository information\n   */\n  async getRepository(owner?: string, repo?: string): Promise<any> {\n    const repoOwner = owner || this.owner;\n    const repoName = repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    const { data } = await this.octokit.rest.repos.get({\n      owner: repoOwner,\n      repo: repoName,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * List issues in a repository\n   */\n  async listIssues(options: any = {}): Promise<any[]> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.listForRepo({\n      owner: repoOwner,\n      repo: repoName,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Get a single issue\n   */\n  async getIssue(issueNumber: number, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    const { data } = await this.octokit.rest.issues.get({\n      owner: repoOwner,\n      repo: repoName,\n      issue_number: issueNumber,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Create a new issue\n   */\n  async createIssue(title: string, body?: string, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.create({\n      owner: repoOwner,\n      repo: repoName,\n      title,\n      body,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Update an existing issue\n   */\n  async updateIssue(issueNumber: number, options: any = {}): Promise<any> {\n    const repoOwner = options.owner || this.owner;\n    const repoName = options.repo || this.repo;\n    \n    if (!repoOwner || !repoName) {\n      throw new Error('Repository owner and name are required. Provide them as parameters or set them in the configuration.');\n    }\n    \n    // Remove owner and repo from options and keep the rest\n    const { owner, repo, ...restOptions } = options;\n    \n    const { data } = await this.octokit.rest.issues.update({\n      owner: repoOwner,\n      repo: repoName,\n      issue_number: issueNumber,\n      ...restOptions,\n    });\n    \n    return data;\n  }\n  \n  /**\n   * Execute a GraphQL query against the GitHub API\n   */\n  async graphql(query: string, variables: any = {}): Promise<any> {\n    return this.octokit.graphql(query, variables);\n  }\n} "],"version":3}